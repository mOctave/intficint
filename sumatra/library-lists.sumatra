sumatra 1
# A library to interpret and store data in lists

--methodcode--
# Calculate the length of a given list
METHOD LIST_LENGTH 1 1
LOCAL i 0
LOCAL len 0
LOCAL inobj false
IF ( $1 ¢ 0 !== [ ) || ( $1 ¢ -1 !== ] ) THEN LIST_LENGTH:NOTALIST
IF ( $1 == [] ) THEN LIST_LENGTH:EMPTYLIST

LABEL LIST_LENGTH:LOOPTOP
LOCAL i $i + 1
IF ( $1 ¢ $i == ] ) && ( ! $inobj ) THEN LIST_LENGTH:DONE
IF ( $1 ¢ $i == ` ) THEN LIST_LENGTH:OPENCLOSEOBJ
IF ( $1 ¢ $i !== , ) || $inobj THEN LIST_LENGTH:NOTCOMMA
LOCAL len $len + 1
SKIPTO LIST_LENGTH:LOOPTOP

LABEL LIST_LENGTH:NOTCOMMA
SKIPTO LIST_LENGTH:LOOPTOP

LABEL LIST_LENGTH:OPENCLOSEOBJ
LOCAL inobj ! $inobj
SKIPTO LIST_LENGTH:LOOPTOP

LABEL LIST_LENGTH:NOTALIST
WARN The string "‡ $1 ¶" is not a list
RETURN 0

LABEL LIST_LENGTH:DONE
IF $i > 2 THEN LIST_LENGTH:ENTRYWITHOUTCOMMA
RETURN $len

LABEL LIST_LENGTH:ENTRYWITHOUTCOMMA
RETURN ( $len + 1 )

LABEL LIST_LENGTH:EMPTYLIST
RETURN 0


# Return a specific-numbered entry from a list
METHOD LIST_ENTRY 2 1
LOCAL char 0
LOCAL commas 0
LOCAL str " "
LOCAL inobj false
IF ( $1 ¢ 0 !== [ ) || ( $1 ¢ -1 !== ] ) THEN LIST_ENTRY:NOTALIST
CATCH LIST_ENTRY:OUTOFBOUNDS

LABEL LIST_ENTRY:LOOPTOP
LOCAL char INT $char + 1
IF $1 ¢ $char == ` THEN LIST_ENTRY:OPENCLOSEOBJ
IF ( ( $1 ¢ $char == , ) || ( $1 ¢ $char == ] ) ) && ( ! $inobj ) THEN LIST_ENTRY:ADDCOMMA
IF ( $commas = $2 ) && $inobj THEN LIST_ENTRY:LOGTEXT
SKIPTO LIST_ENTRY:LOOPTOP

LABEL LIST_ENTRY:ADDCOMMA
IF $commas - $2 == 0.0 THEN LIST_ENTRY:DONE
LOCAL commas $commas + 1
SKIPTO LIST_ENTRY:LOOPTOP

LABEL LIST_ENTRY:LOGTEXT
LOCAL str $str ¶‡ $1 ¢ $char
SKIPTO LIST_ENTRY:LOOPTOP

LABEL LIST_ENTRY:OPENCLOSEOBJ
LOCAL inobj ! $inobj
SKIPTO LIST_ENTRY:LOOPTOP

LABEL LIST_ENTRY:DONE
ENDCATCH
RETURN $str

LABEL LIST_ENTRY:OUTOFBOUNDS
WARN Index INT $2 out of bounds for list "‡ $1 ¶"
ENDCATCH
RETURN " «null value» "

LABEL LIST_ENTRY:NOTALIST
WARN The string "‡ $1 ¶" is not a list
RETURN " «null value» "

# Convert the list to a human-friendly format.
METHOD LIST_HUMAN_READABLE 1 1
EXECUTE LIST_LENGTH $1
LOCAL len $r1
LOCAL i -1
LOCAL str " "

LABEL LIST_HUMAN_READABLE:LOOPTOP
LOCAL i $i + 1
EXECUTE LIST_ENTRY $1 $i
IF $i >= $len - 1 THEN LIST_HUMAN_READABLE:FINAL_ENTRY
LOCAL str $str $r1 ¶,
SKIPTO LIST_HUMAN_READABLE:LOOPTOP

LABEL LIST_HUMAN_READABLE:FINAL_ENTRY
IF $i = 0 THEN LIST_HUMAN_READABLE:ONLY_ENTRY
LOCAL str $str and $r1
RETURN $str

LABEL LIST_HUMAN_READABLE:ONLY_ENTRY
RETURN $r1

--end--
